<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="icon" href="{{asset('pictures/icons/soulicon.ico')}}" type="image/x-icon" />
    <link rel="shortcut icon" href="{{asset('pictures/icons/soulicon.ico')}}" type="image/x-icon" />
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <link rel="stylesheet" type="text/css" href="{{ asset('css/bootstrap.min.css')}} ">
    <link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <script type="text/javascript" src="{{ asset('components/webcomponentsjs/webcomponents.js')}}"></script>
    <link rel="import" href="{{ asset('components/core-icons/core-icons.html')}}">
    <link rel="import" href="{{ asset('components/core-icons/av-icons.html')}}">
    <link rel="import" href="{{ asset('components/core-icons/social-icons.html')}}">
    <link rel="import" href="{{ asset('components/core-scaffold/core-scaffold.html')}}">
    <link rel="import" href="{{ asset('components/core-header-panel/core-header-panel.html')}}">
    <link rel="import" href="{{ asset('components/paper-tabs/paper-tabs.html')}}">
    <link rel="import" href="{{ asset('components/paper-input/paper-input.html')}}">
    <link rel="import" href="{{ asset('components/core-menu/core-menu.html')}}">
    <link rel="import" href="{{ asset('components/core-item/core-item.html')}}"> 
    <script type="text/javascript" src="{{ asset('js/angular.min.js')}}" ></script>
    <script type="text/javascript" src="{{ asset('js/jquery-1.7.2.min.js')}}"></script>
    <script type="text/javascript" src="{{ asset('js/bootstrap.min.js') }}" ></script>    
    <title>Home - {%if 'souller' in url('render_home_page') %}souller{% else %}scribbler party{%  endif %}</title>
</head>
<body ng-app="soulHomeApp">
   
  <style type="text/css">
    html, body {
      height: 100%;
      margin: 0;
    }
  
    body {
      font-family: sans-serif;
    }
    
    core-scaffold {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }

    #soundtagsLabel{
      display: none;
    }
    
    @media only screen and (min-width:500px)
    {
      #soundtagsLabel {
         display: block;
      }
    }

    .content {
      background-color: #F5F5F5;
    }
    
    a{
      text-decoration: none;
    }
    a:hover{
      text-decoration: none;
    }
/*
    @font-face{
        font-family:OpenSans-Light;
        src:url("{{asset('fonts/OpenSans-Light.ttf')}}");
    }
*/
    paper-input {
      width: 98%;
    }

    core-icon {
      transition: all 0.2s;
      -webkit-transition: all 0.2s;
    }

    core-header-panel{
      background-color:white;
    }

    /* some default styles for mode="cover" on core-scaffold */

    core-scaffold[mode=cover]::shadow core-header-panel::shadow #mainContainer {
      left: 120px;
    }

    core-scaffold[mode=cover] .content {
      background-color: #F5F5F5;
      margin: 20px 100px 20px 0;
    }
    core-toolbar{
      color: white;
      background-color: #4875AD;
      border-bottom: 1px solid rgb(221, 221, 221);
    }

    core-item{
      cursor: pointer;
    }

    core-item:hover{
      background-color: rgba(242, 242, 242, 0.3);
    }

    .core-selected{
      background-color: rgba(242, 242, 242, 0.3); 
    }

    paper-tabs[noink][nobar] paper-tab.core-selected {
      color: #4875AD;
      background-color: #eee;
    }

    paper-tab.core-selected {
      background-color: #eee;
      color: #4875AD;
    }

    paper-tab{
      background-color: #eee;
    }

    hr{
      opacity: 0;
    }
    .avatar{
      border-radius: 50%;
      height: 50px;
      width: 50px;
      margin: 2px;
      opacity: 0.7;
      cursor: pointer;
    }
    .avatar:hover{
      opacity: 1;
    }

        #progress-controls{
          color: white;
          position: absolute;
          top: 21px;
          left: 135px;
          width: 310px;
          display: flex;
        }

        #controls-button{
          width: 100%;
          text-align: center;
          display: block;
        }

        #progress-line-container{
          border-top: 7px solid #DBDBDB;
          width: 100%;
          display: inline-block;
          margin-bottom: 1px;
          margin-top: 6px;
          margin-left: 5px;
          position: absolute;
        }
        #progress-line-playing{
          background-color: white;
          height: 8px;
          top: 0;
          position: absolute;
          left: 0;
          width: 0%;
        }
        #progress-bar{
          width: 185px;
          display: block;
          position: relative;
        }

        #player-track-title{
            color: white;
            text-transform: uppercase;
            font-weight: 600;
            font-family: sans-serif;
            position: absolute;
            top: 0px;
            left: 135px;
            width: 255px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap; 
            height: 15px;
        }

        #player-container{
          z-index:50;
        }

        #player-controll-buttons img{
          cursor: pointer;
          opacity: 0.8;
        }

        #player-controll-buttons img:hover{
          cursor: pointer;
          opacity: 1;
        }



    .avatar-selected{
      border-color: #66afe9;
      outline: 0;
      opacity: 1;
      -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);
      box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);
    }
     #background-file-uploader input[type=file],#profilPic-file-uploader input[type=file] {
        margin-left: 60px;
        width: 150px;
        margin-left: 60px;
        background-image: url("{{asset('pictures/icons/photo_placeholder.jpg')}}");
        height: 150px;
        font-size: 0px;
        background-repeat: no-repeat;
        background-size: 100%;
        border: 1px rgba(128, 128, 128, 0.22) solid;
        cursor: pointer;
        opacity: 0.7;
      }

   .new-track-preview{
      color: rgba(0, 0, 0, 0.78);
      margin-top: -2px;
      font-weight: bold;
      margin-bottom: 30px;
      font-family: 'Open Sans', sans-serif;
      padding-top: 15px;
      padding-bottom: 90px;
      border: 1px solid white;
      opacity: 1;
      background-color: white;
      box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), 0 0 2px 1px rgba(255, 255, 255, 0.5);
    }

  .selected{
      border-color: #66afe9;
      outline: 0;
      -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(102,175,233,0.6);
      box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(102,175,233,0.6);
    }







   .hide_small,#player-track-title,#progress-controls{
      display: none;
    }

    #player-giraffe{
      right: 10%;
    }

        @media only screen and (min-width:1000px)
        {

          #player-giraffe{
            right: 28%;
          }

          .hide_small,#player-track-title{
            display: initial;
          }

          #progress-controls{
            display: flex;
          }

          #small-static-text{
            display: none;
          }

          .brand-heading{
            display: none;
          }
        }







  </style>
  <core-scaffold id="sco" responsiveWidth="800px" >
    <core-header-panel navigation flex  mode="waterfall" >
      <core-toolbar >
      <img id="soullogo" src="/pictures/icons/soullogominiwhite.png" style="cursor:pointer;opacity: 1;">  
    <span style="font-family: 'Open Sans', sans-serif;">
      <span style="margin-left: -16px;margin-right:0px;font-weight:700;">
        {%if 'souller' in url('render_home_page') %}
        Soul</span>Ler
        {% else %}
        scribbler</span>party
        {%  endif %}
    </span>
      </core-toolbar>
      <core-menu selected="0">
       {%if 'souller' in url('render_home_page') %}
       {% else %}
        <core-item icon="explore" label="Explore" onClick="closeDrawer()"><a href="/home#/hot"></a></core-item>
       {%  endif %}
        <core-item icon="av:queue-music" onClick="closeDrawer()" label="SoundTags"><a href="/home#/soundtrack/{{app.user.username}}"></a> </core-item>
       {%if 'souller' in url('render_home_page') %}
       {% else %}
        <core-item icon="book" label="Scrap Book"><a href="{{ path('pingsteprofil')}}#/scrapbook/{{app.user.username}}" ></a></core-item>
        <core-item onClick="closeDrawer()" icon="dashboard" label="My Boards">
        <a href="/home#/myboards"></a>
        </core-item>
        <core-item onClick="closeDrawer()" icon="add-box" label="Create Board" style="border-bottom: 1px solid rgba(211, 211, 211, 0.33);">
        <a href="/home#/new"></a>
        </core-item>
       {%  endif %}
        <core-item onClick="closeDrawer()" icon="settings" label="Account Settings" >
          <a href="/home#/settings" ></a>
        </core-item>
        <core-item onClick="closeDrawer()"  icon="drafts"  label="Help & Feedback" style="border-bottom: 1px solid rgba(211, 211, 211, 0.33);"><a href="/home#/feedback"></a></core-item>
        <core-item onClick="closeDrawer()"  icon="settings-power"  label="logout" ><a href="/logout"></a></core-item>      
      </core-menu>
    </core-header-panel>
    
      <div id="menu-label" tool flex></div>
    <div tool >
      <span id="non-condonsed-tools">
         <!--  <core-icon-button icon="search" id="core_icon_button1"></core-icon-button>
          <core-icon-button icon="social:notifications-none"></core-icon-button> -->
          <img width="30" height="30" src="{{app.user.profil.profilPicture}}" style="background-color:white;border-radius: 50%;margin: 4px;cursor:pointer;">
        </span>

    </div>
    <div class="content">
    <paper-tabs id="exploreTabs" selected="0" self-end noInk link>
        <paper-tab name="hotLink">
        <a id="hotLink" href="/home#/hot" flex style="height: initial;width:100%;text-align:center;padding: initial;flex: initial;flex-basis: initial;text-decoration: none;">
            <core-icon icon="social:whatshot" style="margin-right:0px;"></core-icon>
            What's Hot 
        </a>
        </paper-tab>
      <paper-tab name="risingLink">
        <a id="risingLink" href="/home#/rising" flex style="height: initial;width:100%;text-align:center;padding: initial;flex: initial;flex-basis: initial;text-decoration: none;">
          <core-icon icon="trending-up" style="margin-right:0px;"></core-icon>
          Rising
        </a>
      </paper-tab>
      <paper-tab name="recommandedLink">
        <a id="recommandedLink" href="/home#/liked" flex style="height: initial;width:100%;text-align:center;padding: initial;flex: initial;flex-basis: initial;text-decoration: none;">
          <core-icon icon="favorite-outline" style="margin-right:0px;"></core-icon>
          Liked
        </a>
      </paper-tab>
    </paper-tabs>
    <div class="animateFade" ng-view></div>
    </div>
  </div>
  </core-scaffold>
  {% include "PunkAveFileUploaderBundle:Default:templates.html.twig" %}
<script type="text/javascript">
  function closeDrawer(){
      try
        {
          var scaffold=document.getElementById('sco');
          scaffold.closeDrawer();
        }
        catch(e){console.log("error "+e);}
   }
  var isVelcroWallpaper=false;
  var app = angular.module('soulHomeApp',[]).config(function($interpolateProvider){
            $interpolateProvider.startSymbol('##').endSymbol('##');
        })
    //---------------------------- route ------------------------------------------------------
    app.config(['$routeProvider',
        function($routeProvider){
      $routeProvider.
      when('/hot', {
        templateUrl:"/dashboard",
        controller:'HomeController'   
      }).
      when('/rising', {
        templateUrl:"/dashboard",
        controller:'risingController'   
      }).
      when('/myboards', {
        templateUrl:"/dashboard",
        controller:'myBoardsController'   
      }).
      when('/liked', {
        templateUrl:"/dashboard",
        controller:'likedController'   
      }).
      when('/new', {
        templateUrl:"/addnewboard?wall",
        controller:'newBoardController'   
      }).
      when('/soundtrack/:nickName',{
        templateUrl:"/soundtrack/angular",
        controller:'lifeSoundController'
      }).
      when('/settings',{
        templateUrl:"/edit",
        controller:'settingsController'
      }).
      when('/feedback',{
        templateUrl:"/show/feedback",
        controller:'feedbackController'
      }).
     when('/chooseavatar',{
        templateUrl:"/chooseavatar",
        controller:'chooseavatarController'
      }).
      {%if 'souller' in url('render_home_page') %}
      otherwise({redirectTo:'/soundtrack/{{app.user.username}}'});
      {% else %}
      otherwise({redirectTo:'/hot'});
      {%  endif %} 
    }]);
      
    app.directive('routeLoadingIndicator', function($rootScope) {
    return {
      restrict: 'E',
      template: '<div ng-show="isRouteLoading" style="margin-top:50px;opacity:0.5;text-align:center;background-color:white;width:100%;width: 50%;margin-left: 30%;box-shadow:0 1px 1px 0px rgba(0, 0, 0, 0.2), 0 0 2px 1px rgba(255, 255, 255, 0.5)"><img src="/pictures/icons/loading.gif" style="opacity:1;margin-top: 0px;margin-right: -55px;"><span class="awesome-loading">loading Awesomness ...</span></div>',
      replace: true,
      link: function(scope, elem, attrs) {
        scope.isRouteLoading = false;
   
        $rootScope.$on('$routeChangeStart', function() {
          scope.isRouteLoading = true;
        });
        $rootScope.$on('$routeChangeSuccess', function() {
          scope.isRouteLoading = false;
        });
      }
    };
  });

    app.controller('HomeController',function($scope,$http, $routeParams){
      $('#menu-label')[0].innerHTML="Explore";
      $("#exploreTabs")[0].style.display="flex";
      closeDrawer();
      $scope.loading=true;
      $http({method:'GET',
             url:"/show/template/hot"
      })
      .success(function(data, status, headers){
        $scope.boards=data.popular;
      })

    });
    
    app.controller('risingController',function($scope,$http, $routeParams){
      $('#menu-label')[0].innerHTML="Explore";
      $("#exploreTabs")[0].style.display="flex";
      closeDrawer();
      $scope.loading=true;
      $http({method:'GET',
             url:"/show/template/rising"
      })
      .success(function(data, status, headers){
        $scope.boards=data.popular;
      })

    });
   app.controller('feedbackController',function($scope,$http, $routeParams){
      $('#menu-label')[0].innerHTML="Help & Feedback<div id='soundtagsLabel' style='font-size: 13px;opacity: 0.8;'>We welcome problem reports, feature ideas and general comments.</div>";
      $("#exploreTabs")[0].style.display="none";
      closeDrawer();
      $scope.loading=true;
      $scope.submitFeedback =  function()
      {
        var url="/send/feedback";
        console.log($scope.contenu);
        $.post(url,{contenu:$scope.contenu});
        $scope.contenu="";
        $scope.thanks="Thank you for Your feedback";
      }
    });

    app.controller('chooseavatarController',function($scope,$http, $routeParams){
        $('#menu-label')[0].innerHTML="Settings <div id='soundtagsLabel' style='font-size: 13px;opacity: 0.8;'>Choose or upload an avatar</div> ";
        var avatarsHTML="";
        var avatarsArray=[
                          'sheldon',
                          'lenny',
                          'harold',
                          'rajif',
                          'einstein',
                          'gandi',
                          'mario',
                          'steve',
                          'alien',
                          'blondy',
                          'kim',
                          'woods',
                          'indiangirl',
                          'hiphop',
                          'charli',
                          'hitler',
                          'lara',
                          'king',
                          'queen',
                          'moneyMan',
                          'jackson',
                          'milky',
                          'astraunaut',
                          'diver',
                          'red',
                          'neo',
                          'chegavara',
                          'driver',
                          'devil',
                          'paps',
                          'kayty',
                          'terminator',
                          'pokahantis',
                          'vikings',
                          ]

        for (var i = 0; i < avatarsArray.length; i++) {
          avatarsHTML = avatarsHTML + "<img src='/avatars/"+avatarsArray[i]+".jpg'  class='avatar'>" ;
        };

        $("#avatars-container")[0].innerHTML=avatarsHTML;
        $(".avatar").click(function() {
        avatarChosen = true;
        localStorage.setItem("guestAvatar",this.src);
        localStorage.setItem("guestName",$("#guestName").val());
        $("#fresh-comment-thumbnail").attr("src",this.src);
        $("#avatars-container").find("img").attr("class","avatar");
        $(this).attr("class","avatar avatar-selected");
        $("#avatar-input").val($(this).attr("src"));
      })
      getEditId();
    });

    app.controller('likedController',function($scope,$http, $routeParams){
      $('#menu-label')[0].innerHTML="Explore";
      $("#exploreTabs")[0].style.display="flex";
      closeDrawer();
      $scope.loading=true;
      $http({method:'GET',
             url:"/show/template/liked"
      })
      .success(function(data, status, headers){
        $scope.boards=data.popular;
      })
    });


    app.controller('myBoardsController',function($scope,$http, $routeParams){
      $('#menu-label')[0].innerHTML="My Boards";
      $("#exploreTabs")[0].style.display="none";
      closeDrawer();
      $scope.templateType=3;
      $scope.waveLVL=0;
      $scope.loading=true;
      $http({method:'GET',
             url:"/show/template/myboards"
      })
      .success(function(data, status, headers){
        $scope.boards=data.popular;
      })
      $scope.pinBoard = function(board){
        var url ="/board/setpinned/"+board.boardId;
        $.get(url);
        board.pinned=true;
      }
      $scope.unPinBoard = function(board){
        var url ="/board/setunpinned/"+board.boardId;
        $.get(url);
        board.pinned = false;
      }
    });

    app.controller('settingsController',function($scope,$http, $routeParams){
      $('#menu-label')[0].innerHTML="Account Settings";
      $("#exploreTabs")[0].style.display="none";
      closeDrawer();
      $scope.loading=true;
    });


    app.controller('newBoardController',function($scope,$http, $routeParams){
      $('#menu-label')[0].innerHTML="New Board";
      $("#exploreTabs")[0].style.display="none";
      closeDrawer();
      $scope.loading=true;
      $scope.trackUploadId = -1;
      isVelcroWallpaper =false;
      $scope.isProfilPic =false;
      getEditId();
      $scope.setPredefinedBackground = function(src){
        $("#background img").attr("class","thumbnail small-background-preview");
        console.log(src)
        src.setAttribute("class","selected thumbnail small-background-preview");
        $("#predefinedbackgroud").attr("value",src.getAttribute("src"));
      }

      $scope.setPredefinedContainer = function(src){
        $("#background img").attr("class","thumbnail small-background-preview");
        src.setAttribute("class","selected thumbnail small-background-preview");
        $("#hiddencontainer").attr("value",src.getAttribute("src"));
      }

      $scope.setIsVelcroWallpaper = function()
      {
        isVelcroWallpaper =false;
      }

      $scope.appendPicture = function(id,src)
      {
        $("#background-file-uploader input[type=file]").css("background-image","url('"+src+"')");
        $("#hiddenEditId").val(id)
      }


    });

    app.controller('lifeSoundController',function($scope, $http , $routeParams){
      closeDrawer();
      $('#menu-label')[0].innerHTML="#SoundTags<div id='soundtagsLabel' style='font-size: 13px;opacity: 0.8;'>What do you think about when yo listen to ...</div>";
      $("#exploreTabs")[0].style.display="none";
      $scope.nickName=$routeParams.nickName;
      if($routeParams.nickName)
        var urlParams="?nickName="+$routeParams.nickName;

    var options, a;
    jQuery(function(){
        options = { serviceUrl:"http://ws.audioscrobbler.com/2.0/?method=track.search&api_key=543fc405ef684b058fa4808ce33ee018&format=json&limit=5&"};
        try{
          a = $('#song-input-echo').autocomplete(options);
        }catch(e){log("error"+e)}
    }); 

var gSpaceIndex = 1;
var editedId;
var stopTyping;
var gSpaceIndex = 1;
$("#song-input").on("change keyup paste", function(){
    clearTimeout(stopTyping);
    stopTyping = setTimeout(completeTrack,500);
    if($("#song-input").val().indexOf(" ") == -1) 
      gSpaceIndex = 1;
    var spaceIndex = $("#song-input").val().split(" ").length;
    if(gSpaceIndex < spaceIndex) 
    {
      gSpaceIndex = spaceIndex;
    
      $("#song-input-echo").val($("#song-input").val())
      $("#song-input-echo").focus();
      $("#song-input").focus();
    }


})
var gSpaceIndex = 1;
var gtest;
$("textarea").on("change keyup paste", function(e){
    if((e.keyCode == 13)&&($(this).val().trim() != ""))
      submitComment($(this).attr("id").substr(12));
})

  while(intervalArray.length > 0)
   clearInterval(intervalArray.pop());

  $http({method:'GET',
         url:"{{path('soullifiedlifesoundtrack_get_angular_tracks')}}"+urlParams+"&?idx=0"
  })
  .success(function(data, status, headers){
    $scope.tracksArray = data.trackArray;
  {% if app.user %}
    if(data.user.nickName == "{{app.user.username}}")
      $scope.searchMessage = "Type song or Artise name";
    else
      $scope.searchMessage = "#Tag "+data.user.fullName+" in a song !!";
  {% else %}  
      $scope.searchMessage = "#Tag "+data.user.fullName+" in a song !!";
  {%  endif %}

    $scope.idx = 0;
    $scope.user =  data.user;
    $scope.boards = data.boardsArray;
    var time=10000;
    for (var i = 0; i < $scope.tracksArray.length; i++) {
      if($scope.tracksArray[i].photos.length > 1 )
          {
            $scope.tracksArray[i].photos.idx = 0;
          }
    };

    $scope.ignoreScrolling = false;
    if($scope.user.background)
    {
      $("#cover-image").css("background-image","url("+$scope.user.background+")");
      $(".filter-previews").attr("src",$scope.user.background);
/*      if($scope.board.filter == 1)
        $("#cover-image").css("-webkit-filter","blur(5px)"); 
      else
        */
        $("#cover-image").css("-webkit-filter",""); 
    }
    var title=$scope.user.fullName+"'s Soundtrack";
    $("textarea").on("change keyup paste", function(e){
              if((e.keyCode == 13)&&($(this).val().trim() != ""))
                submitComment($(this).attr("id").substr(12));
                })
  });
  
  if(firstTimeScrollDefined == true)
    {
      firstTimeScrollDefined = false;
      $(document).scroll(function(){
            if((-$(this).scrollTop() + $(this).height() < 100) && $scope.ignoreScrolling == false)
              //$scope.getNextWave();  
            return
      })
    }
    boardId = -1;
    if(editId == 0)
      getEditId();
    if(playing == false)
      $("#Soundtagged").fadeOut();


$scope.addSong = function () {
  console.log("fsqq");
}

$scope.submitTrackComment =  function(track){
  console.log("adding a comment");
{% if app.user %}
  addComment(track.id,track.freshSubmcomment);
  track.freshSubmcomment="";
{% else %}
  $("#sing-up-btn").click();
{% endif %}
}


$scope.fakeBindTrigger= function(track){
  $("#fake-bind-trigger").click();
  var loadingHTML='<div id="loading-html" style="text-align:center;background-color:white;width:100%;width: 50%;margin-left: 30%;box-shadow:0 1px 1px 0px rgba(0, 0, 0, 0.2), 0 0 2px 1px rgba(255, 255, 255, 0.5)"><img src="/pictures/icons/loading.gif" style="opacity:1;margin-top: 12px;margin-right: -0px;"><span class="awesome-loading">loading Awesomness ...</span></div>';
  $("#myBoardToSelectBody")[0].innerHTML = loadingHTML;
  var url="/angular/myboards";
  $.get(url,{
    nickName:$scope.user.nickName
  },function (data) {
    var finalHtml="";
    for (var i = 0; i < data.boards.length; i++) {
      var trackName="";
      var coverurl="";
      if (data.boards[i].coverurl)
        coverurl=data.boards[i].coverurl.replace("large","small");
      if (data.boards[i].song) {
        trackName='<span  style="text-align:left;color: rgb(139, 139, 139);font-size: 11px;opacity:0.5;"><img style="margin-right: 5px;opacity: 0.3;" src="/pictures/icons/small-song-black.png">'+data.boards[i].song+'</span>'+
                  '      <hr style="margin-bottom:0;margin-top:5px;">';
      }
      finalHtml=finalHtml+'<div id="tryBindMe'+data.boards[i].id+'" onClick="bindBoardToSong('+data.boards[i].id+','+track.id+')" class="my-boards" onClick="fakeModalClose()" style="background-image: url('+coverurl+');background-size: cover;">'+
      '    <a>'+
      '    <div class="board-info">'+
      '      <div class="board-description" style="text-align:left;" >'+data.boards[i].desc+'</div>'+
        '    <div class="likes-comments">'+
        '      <img class="small-community" src="/pictures/icons/small-owner.png">'+
        '      <img src="/pictures/icons/small-comment-black.png" class="like-buttons" style="opacity:0.3;margin-left:10px;cursor:default;">'+
        '      <span id="nbrOfComments">'+data.boards[i].nbrComments+'</span>'+
        '    </div>'+
        '    <div class="controls-buttons" style="display: block;">'+
        '      <hr style="margin-bottom:0;margin-top:5px;">'+
        trackName+
        '      <span class="board-title" style="text-align:left;">'+data.boards[i].name+'</span>'+
        '    </div>'+
        '  </div>'+
        '  </a>'+
        '</div>';
    };
    $("#myBoardToSelectBody")[0].innerHTML = finalHtml;
  })
}

$scope.getNextWave = function(){
  var loadingHTML='<div id="loading-html" class="col-md-5 col-sm-10 col-xs-10 col-md-offset-3 col-sm-offset-1 col-xs-offset-1 sub-container new-track-preview" style="text-align:center;background-color:white;"><img src="{{asset("pictures/icons/loading.gif")}}" style="opacity:1;margin-top: 12px;margin-right: 0%;"><span class="awesome-loading">loading Awesomness ...</span></div>';

  $("#tracks-row").append(loadingHTML);
  $scope.idx=$scope.idx+5;
  $scope.ignoreScrolling = true;
  var url = "{{path('soullifiedlifesoundtrack_get_angular_tracks')}}"
  $.get(url,{
             idx:$scope.idx,
             nickName:$scope.user.nickName
         },function(data){ 
          var tempArray = $scope.tracksArray.concat(data.trackArray);
          $scope.tracksArray = tempArray;
          $("#loading-html").remove();
          $scope.ignoreScrolling=false;
          $scope.$apply();
          $("textarea").on("change keyup paste", function(e){
              if((e.keyCode == 13)&&($(this).val().trim() != ""))
                submitComment($(this).attr("id").substr(12));
                })
        });
}
})



var editId=0;
var playing=false;
function getEditId()
  {    
    editedId=0;
    var url= "{{ path('soullifiedlifesoundtrack_gen_new_editId')}}";
    $.get(url,{},function(data){   
          editedId = data.editId;;
          editId = data.editId;
          $(function() {
                new PunkAveFileUploader({ 
                    'uploadUrl': "/commenttrack/upload?editId="+editId,
                    'viewUrl':  "/web/uploads/tmp/attachments/?editId="+editId,
                    'el': '.file-uploader',
                    'exist gingFiles': {{ null | json_encode | raw }},
                    'delaySubmitWhileUploading': '.edit-form' ,
                });
            });
        });
  }

var firstTimeScrollDefined=true;
var intervalArray = [];


$("#add-song-form").submit(function(){
  addSong();
  return false;
})

function completeTrack() {
 /* if($("#song-input").val().indexOf(" ") == -1) 
      gSpaceIndex = 1;*/
    /*var spaceIndex = $("#song-input").val().split(" ").length;
    if(gSpaceIndex < spaceIndex) 
    {
      gSpaceIndex = spaceIndex;
    */
      $("#song-input-echo").val($("#song-input").val())
      $("#song-input-echo").focus();
      $("#song-input").focus();
    //}
}

var gSpaceIndex = 1;
var editedId;
var stopTyping;
$("#song-input").on("change keyup paste", function(){
    clearTimeout(stopTyping);
    stopTyping = setTimeout(completeTrack,500);
    if($("#song-input").val().indexOf(" ") == -1) 
      gSpaceIndex = 1;
    var spaceIndex = $("#song-input").val().split(" ").length;
    if(gSpaceIndex < spaceIndex) 
    {
      gSpaceIndex = spaceIndex;
    
      $("#song-input-echo").val($("#song-input").val())
      $("#song-input-echo").focus();
      $("#song-input").focus();
    }


})

var gSpaceIndex = 1;
var gtest;
$("textarea").on("change keyup paste", function(e){
    if((e.keyCode == 13)&&($(this).val().trim() != ""))
      submitComment($(this).attr("id").substr(12));
})


{%  if app.user %}



function updateFavColor(color)
{
    var url="/profil/set/favcolor";    
    $.get(url,{profilId:'{{app.user.profil.id}}',
             favColor:color
           });
}


function deleteComment(commentId)
{
  
  var url = "{{ path('soullifiedlifesoundtrack_delete_comment')}}";
  $("#comment-area"+commentId).parent().fadeOut();  
  $.get(url,{
    commentId:commentId
  })
}


function displayClose(commentId){
  $("#closeComment"+commentId)[0].style.display="inherit";
}

function hideClose(commentId){
 $("#closeComment"+commentId)[0].style.display="none";
}


function addComment(trackId,content)
{
  $("#comment-area"+trackId).val("");
  var url = "{{ path('soullifiedlifesoundtrack_add_new_comment')}}";
  $.post(url,{
    content:content,
    trackId:trackId
  },function (data)
  {
    var minHeight="60px";
    commentHtml='<div onMouseenter="displayClose('+data.id+')" onMouseleave="hideClose('+data.id+')" class="col-md-6 col-sm-10 col-xs-10 col-md-offset-3 col-sm-offset-1 col-xs-offset-1 main-comment-area"  style="opacity:1"><span class="input-group-addon" style="border: 0px;border-radius: 0px;background-color: white;"><span class="comment-username" >{{app.user.profil.fullname}}</span><img style="background-color:white;box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);opacity:1;cursor:pointer;width:50px;position:absolute;top:2px;left:1px;" src="{{app.user.profil.profilPicture}}"/></span><span id="comment-area'+data.id+'" type="text" class="form-control commented-area" style="min-height:'+minHeight+'" >'+content+'<span class="pic-comment-container" style="height:80px;"></span></span><span id="closeComment'+data.id+'" class="close delete-comment" onClick="deleteComment('+data.id+')">x</span></div>';

    $("#comment-area"+trackId).parent().after(commentHtml);
    //$("#caching-pictures")[0].innerHTML=""; 
  })
}

{% endif %}

function hideMainMenue(){
  $("#main-menu-dropdown").fadeOut();
  $("#menu-icon").attr("onClick","displayMainMenue()");
}


//getSourceComplete();

{%  if app.user %}
var idCache = new Array();
function addSong(songName,songPic)
{
 
if(songName)
{
  keyWord=songName;
  var artist = songName.split("-")[1];
  var title = songName.split("-")[0];
  var newTrackId = 0;
  var search = artist+" "+title;
  var searchId =search.split(" ").join("_");
  if(idCache.length == 0)
      idCache.push(0);
  else
  {
      newTrackId=idCache[idCache.length - 1];
      newTrackId--;
      idCache.push(newTrackId);
  }
    var lyricsLoading = "<span id='lyricsLoading"+newTrackId+"' ><span id='lyricsFading"+newTrackId+"'><img style='margin-right: -50px;opacity: 0.5;z-index: -2;margin-left: 105px;' src='/pictures/icons/loading.gif' > Searching Lyrics</span></span>";

    var commentTrack = '<button id="comment-track'+newTrackId+'" class="btn btn-sm btn-primary" style="display:none;position: absolute; top: 30px; right: 4px; border-radius: 3px;" ng-click="submitTrackComment('+newTrackId+')">submit</button>'


    var controlHtml='<span class="file-uploader-container upload-track-true-container uploadPhotoNoLyrics2" style="left:inherit;top:45px;opacity:0.8;" class="uploadPhotoNoLyrics" onclick="fakeTrackUploadTrigger('+newTrackId+')">'+
                  '<img src="/pictures/icons/camera-big.png" class="updaload-track-pic-img">'+
                '</span>'+
                '<span>'+
                  '<img ng-show="track.photos.length == 0" ng-click="fakeBindTrigger(track)" title="Mark a place" id="bind-to-a-board" src="https://cdn0.iconfinder.com/data/icons/android-icons/512/location-01-256.png"  style="height: 30px;top: -53px;" ng-class="{bindNoLyrics:track.lyrics == null,bindNoLyrics2:track.lyrics != null}" class="bindNoLyrics2" onClick="append_map('+newTrackId+')">'+

                 '</span>'+
                 '<button id="choose-lyrics-button'+newTrackId+'" class="btn btn-default btn-select-lines noLyricsChooseButton2" onclick="chooseLyrics('+newTrackId+')" style="margin-top: 1%;color: black;text-transform: none;border: 1px grey solid;">'+
                      '<img src="/pictures/icons/lyrics.png">'+
                       'lyrics'+
                 '</button>';
    var mapHtml='<div class="col-md-6 col-sm-10 col-xs-10 col-md-offset-3 col-sm-offset-1 col-xs-offset-1 song_map" id="map'+newTrackId+'"></div>';
    var myhtml='<div class="col-md-6 col-sm-10 col-xs-10 col-md-offset-3 col-sm-offset-1 col-xs-offset-1 main-comment-area" >'+commentTrack+'<textarea id="comment-area'+newTrackId+'" type="text" class="form-control tag-input"  placeholder="What do you think about when you listen to '+title+'?" ></textarea><img src="/pictures/icons/tag_music.jpg" class="song-tag-icon"></div>'+mapHtml+'<span class="board-date">added </span><div class="col-md-6 col-sm-10 col-xs-10 col-md-offset-3 col-sm-offset-1 col-xs-offset-1 sub-container new-track-preview" >'+controlHtml+
        '<button id="done-selecting-button'+newTrackId+'" class="btn btn-success btn-select-lines disabled" onClick="doneSelecting('+newTrackId+')" style="margin-top: 1%;display:none;margin-top: -87px;" >Done selecting</button><img src="/pictures/icons/lyrics.png" style="top: -8%;opacity: 0;height: 55px;margin-left: 189px;cursor: auto;" /><span id="lyrics'+newTrackId+'"><span id="lyrics'+newTrackId+'"><p class="lyrics-limited">'+lyricsLoading+'</p></span><span id="'+searchId+'"  class="youtube-frame-container"></span></span><span class="new-track-preview-title" ><img src="/pictures/icons/big-play-black.png" title="Play" class="play-btn"  id="playSong'+newTrackId+'"  onClick=playSong('+newTrackId+',"")><span id="songTitle'+newTrackId+'">'+title+' -  '+artist+'</span></div>';

    sendTrack(title,artist,null,null,newTrackId,songPic);
    $("#main-row").prepend(myhtml);
    $("#lyricsFading"+newTrackId).fadeOut(5000);
    $("#song-input").val("");
}
else
{
  $("#add-song-loading").fadeIn();
  songName=$("#song-input").val();
  if(songName.length == 0)
    return false;
}

  
}

{% endif %}
var nextId=0;
var newTrackId=0;
function sendTrack(title,artist,lyrics,mood,newTrackId,songPic)
{
  var url="{{path('soullifiedlifesoundtrack_add_track')}}";
  $.post(url,{
              title:title,
              artist:artist,
              boardId:boardId,
              mood:mood,
              songPic:songPic,
              lyrics:lyrics?lyrics.trim():null,
              newTrackId:newTrackId,
              },function(data){ 

                nextId=idCache.pop();
                newTrackId = data.songId;

                $("#choose-lyrics-button"+nextId).attr("id","choose-lyrics-button"+newTrackId);
                $("#choose-lyrics-button"+newTrackId).attr("onClick","chooseLyrics("+newTrackId+")");

                $("#done-selecting-button"+nextId).attr("id","done-selecting-button"+newTrackId);
                $("#done-selecting-button"+newTrackId).attr("onClick","doneSelecting("+newTrackId+")");
                
                $("#upload"+nextId).attr("id","upload"+newTrackId);
                $("#lyrics"+nextId).attr("id","lyrics"+newTrackId);

                $("#playSong"+nextId).attr("id","playSong"+data.songtrackId);
                $("#playSong"+data.songtrackId).attr("onClick","playSong("+data.songtrackId+",'"+data.youtubeId+"')"); 

                $("#songTitle"+nextId).attr("id","songTitle"+data.songtrackId);
                $("#lyricsLoading"+nextId).attr("id","lyricsLoading"+newTrackId);

                
                $("#comment-area"+nextId).attr("id","comment-area"+newTrackId);
                $("#comment-track"+nextId).attr("onClick","submitFreshComment("+newTrackId+")");
                $("#comment-track"+nextId).attr("id","comment-track"+newTrackId);

                $("#comment-area"+newTrackId).on("change keyup paste", function(e){
                    $("#comment-track"+this.id.substr(12))[0].style.display="block";
                })

                if(lyrics)
                  return;
                $("#validate-lyrics-button").fadeIn();
                var url='http://api.lyricsnmusic.com/songs?api_key=0ece71190cce454fd5beea3db7ec22&track='+encodeURI(title)+'&artist='+encodeURI(artist);
                $.ajax({
                crossDomain: true,
                contentType: "json; charset=utf-8",
                dataType : "jsonp",
                url: url,
                cache:true,
                }).done(function( data ) {
                    var gdata=data.data.sort(sortingOccur);
                    var lyrics=gdata[0].snippet.trim();
                    $("#lyricsLoading"+newTrackId)[0].innerHTML=lyrics;
                    $("#song-input").val("");
                    sendTrack(title,artist,lyrics,null,newTrackId,songPic);
                  }
                );

                if(!data.youtubeId) 
                    {
                      searchSoundCloudId(data.songTitle,data.songtrackId);
                    }
                });
}


function searchSoundCloudId(str,songtrackId) {
  console.log("str ================== "+str)
  var url="http://api.soundcloud.com/tracks.json?client_id=229b5c9f7dca199464f6a3d38a9a16d1&q="+str+"&limit=10"
  $.get(url,{},function(data){ 
              console.log(data[0].id);
              var tracksMostListened=data.sort(function(a,b){return a.playback_count < b.playback_count });
              var soundcloudIdSong = tracksMostListened.filter(function (a,b) {
                return (a.track_type == "original");
              })[0].id
              //var soundcloudIdSong=data.sort(function(a,b){return a.playback_count < b.playback_count })[0].id;
              //var soundcloudIdSong = data[0].id;
              $("#soundcloudplayer").attr("src","https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/"+soundcloudIdSong+"&amp;color=ff6600&amp;auto_play=false&amp;show_artwork=true")
                  updateYoutubeId(songtrackId,soundcloudIdSong);
                })
}
function containsOne(elt){ 
  return elt.title.indexOf(keyWord) > -1 
}

function sortingOccur(a,b){
    return (numbreOfOccurance(b.title+" "+b.artist.name,keyWord) - numbreOfOccurance(a.title+" "+a.artist.name,keyWord))
  }


function numbreOfOccurance(strA,strB)
{
  var total=0;
  var total2=0;
  var tabA=strA.toLowerCase().split(/[\s,?!]+/);
  var tabB=strB.toLowerCase().split(/[\s,?!]+/);

  for (var j = 0; j< tabA.length; j++) 
  {
    for (var i = 0; i < tabB.length; i++) 
    {
      if( tabB[i] == tabA[j] ) {
        total ++ ;
        if( i == j) total++ ;
      }
    };
  };

  for (var j = 0; j< tabB.length; j++) 
  {
    for (var i = 0; i < tabA.length; i++) 
    {
      if( tabB[j] == tabA[i] )
      {
        total2 ++ ;
        if( i == j) total2 ++ ;
      }
    };
  };
  return Math.min(total,total2);
}

function select(id,i)
{
  var lineId=id+""+i;
  var elt=$("#l"+lineId);
  $("#done-selecting-button"+id).attr("class","btn btn-success btn-select-lines");
  elt[0].getAttribute.class="lyrics-line selected";
  elt.attr("class","lyrics selected");
  elt.attr("onClick","deselect("+id+","+i+")");
}

function deselect(id,i)
{
  var lineId=id+""+i;
  var elt=$("#l"+lineId);
  elt.attr("class","lyrics notSelected");
  elt.attr("onClick","select("+id+","+i+")");
}


function submitFreshComment(trackId) {
  var content=$("#comment-area"+trackId).val();
  $("#comment-track"+trackId)[0].style.display="none";
  addComment(trackId,content);
}

var debugStr;



function doneSelecting(id)
{
  var chosenlyrics = $("#editArea"+id).val();
  $("#done-selecting-button"+id).fadeOut();
  $("#choose-lyrics-button"+id).fadeIn(); 
  var url = "{{path('soullifiedlifesoundtrack_update_chosen_lyrics')}}";
  $.post(url,{
             id:id,
             chosenlyrics:chosenlyrics,
         }); 
  $("#lyrics"+id)[0].innerHTML="<p class='lyrics-limited'><span id='lyricsLoading"+id+"'>"+chosenlyrics+"</span></p>";
}

function checkLyricsFound(id,oldLyrics)
{
  if(lyricsFound == false)
  {
    $("#lyrics"+id)[0].innerHTML="<textarea class='form-control editArea' id='editArea"+id+"'  >"+
                                 oldLyrics.replace('<p class="lyrics-limited">',"").replace("</p>","").trim()+
                                 "</textarea>";
    $("#done-selecting-button"+id).attr("class","btn btn-success btn-select-lines");
  }
  else
    return true;
}

var moodSelectorCounter=0;
var defaultMood = 1;
var lyricsFound;
function chooseLyrics(id)
{

  if($("#lyricsLoading"+id)[0].innerText.length > 0)
    var oldLyrics =  $("#lyricsLoading"+id)[0].innerHTML;
  else
    var oldLyrics = "";

  $("#choose-lyrics-button"+id).fadeOut();
  $("#done-selecting-button"+id).fadeIn();
  $("#lyrics"+id)[0].innerHTML="<textarea class='form-control editArea' id='editArea"+id+"'  >"+
                                 oldLyrics.replace('<p class="lyrics-limited">',"").replace("</p>","").trim()+
                                 "</textarea>";
  $("#done-selecting-button"+id).attr("class","btn btn-success btn-select-lines");
}



function retrieveFromSoullified(id)
{
  var url="{{path('soullifiedlifesoundtrack_get_Full_lyrics_ready')}}";
  $.get(url,{
             trackId:id
         },function(data){   
              //the response is in the data variable
            if(data.responseCode == 200 ){
                 // alert(data.commentId);
              if(data.lyrics.length < 10 || data.lyrics.substr(0,8).indexOf("version=") ==0 )
              {
                  lyricsFound = false;
                  return true;
              }
              else
                  lyricsFound=true;

                  if(data.lyrics.indexOf("\n") != -1)
                    var fullLyrics=data.lyrics.trim().split("\n");
                  else
                    var fullLyrics=data.lyrics.trim().split(". ");

                  var myhtml="<span class='lyrics'>";
                   
                  myhtml=myhtml+"<div id=l"+id+"0 class='lyrics notSelected' onClick=select("+id+",0)>  <img src='{{asset('pictures/icons/tiny-plus-white.png')}}' style='margin-right:1%;' >"+fullLyrics[0]+'</div>';

                  for (var i = 1; i < fullLyrics.length; i++) {
                    var lineId=id+""+i;
                    myhtml=myhtml+"<div id=l"+lineId+" class='lyrics notSelected' onClick=select("+id+","+i+")> <img src='{{asset('pictures/icons/tiny-plus-white.png')}}' style='margin-right:1%;' >"+fullLyrics[i]+'</div>';
                   };
                  
                  myhtml += "</span>";
                  $("#lyrics"+id)[0].innerHTML=myhtml;
            }
           else if(data.responseCode==500){//bad request
              console.log("error 500")
           }  
           else{
              console.log("gen error")
           }
        });
}


var tabs = document.querySelector('paper-tabs');
tabs.addEventListener('core-select', function() {
  if($("#"+tabs.selected).length > 0)
      $("#"+tabs.selected)[0].click();
});



function retrieveFromApi(id,isDeamon)
{
  var url="{{path('soullifiedlifesoundtrack_get_full_lyrics')}}";
  $.get(url,{
             id:id
         },function(data){   
              //the response is in the data variable
            if(data.responseCode==200 ){
                 // alert(data.commentId);
                 if(isDeamon == false){ 
                                   lyricsFound=true;
                                   if(data.lyrics.indexOf("\n") != -1)
                                     var fullLyrics=data.lyrics.trim().split("\n");
                                   else
                                     var fullLyrics=data.lyrics.trim().split(". ");
                 
                                   var myhtml="<span class='lyrics'>";
                                    
                                   myhtml=myhtml+"<div id=l"+id+"0 class='lyrics notSelected' onClick=select("+id+",0)>  <img src='{{asset('pictures/icons/tiny-plus-white.png')}}' style='margin-right:1%;' >"+fullLyrics[0]+'</div>';
                 
                                   for (var i = 1; i < fullLyrics.length; i++) {
                                     var lineId=id+""+i;
                                     myhtml=myhtml+"<div id=l"+lineId+" class='lyrics notSelected' onClick=select("+id+","+i+")> <img src='{{asset('pictures/icons/tiny-plus-white.png')}}' style='margin-right:1%;' >"+fullLyrics[i]+'</div>';
                                    };
                                   
                                   myhtml += "</span>";
                                   $("#lyrics"+id)[0].innerHTML=myhtml;
                    }

                  $.post("{{ path('soullifiedlifesoundtrack_update_Full_lyrics')}}",{FullLyrics:data.lyrics.replace("<Lyric>","").replace("</Lyric>","").replace("</GetLyricResult>","").trim(),trackId:id});
            }
           else if(data.responseCode==500){//bad request
              console.log("error 500")              
           }  
           else{
              console.log("gen error")
           }

        });
}


 //-------------------------------------------------------------------------------------------------------------
{%  if app.user %}
var Friendevents="";

/*$("#Friend-requests").popover({title:function() {
                       return "<img src='{{asset('pictures/icons/loading.gif')}}' style='margin-left: 60px;' >";                        
                                 },html:true,placement:"bottom"});
*/

function getEvents(){
       $.get("{{ path('get_ajax_requests')}}", //replace it with the secssion
        function(data){   
           //the response is in the data variable
            if(data.responseCode==200 ){
                 Friendevents=data.htmlcode;
                 $("#Friend-requests").popover({title:function() {
                        return Friendevents;                        
                                  },html:true,placement:"bottom"});
            }
         }
       );

}
//--------------------------------------------------------------------------------------------------------------

function hideAllNotifs() {
}
{% endif %}




var idx=0;
function getNextWave()
{

  console.log("getNextWave")
  var loadingHTML='<div id="loading-html" class="col-md-6 col-sm-10 col-xs-10 col-md-offset-3 col-sm-offset-1 col-xs-offset-1 sub-container new-board-preview" style="text-align:center;"><img src="{{asset("pictures/icons/loading.gif")}}" style="opacity:1;margin-top: 12px;margin-right: 0%;"><span class="awesome-loading">loading Awesomness ...</span></div>';

  $("#container").append(loadingHTML);

  ignoreScrolling = true;
  idx=idx+5;
  var url="/home#/hot";
  $.get(url,{
             wave:idx,
         },function(data){   
          console.log(data)
          if(data.taille == 0)
          {
             $("#loading-html").remove()
            return true;
          }
          mdata=data.finalTab;
          for (var i = 0; i < mdata.length; i++) {
            var myhtml='<div ng-repeat="board in boards" class="box board ng-scope">'+
                    '<a href="/life/#/board/'+data[i].boardurl+'">'+  
                        '<img ng-show="board.coverurl" src="'+data[i].coverurl+'" style="width: 100%;" >'+
                           '<div class="board-title">'+data[i].title+'</div>'+
                            '</a><div class="board-info"><a href="/life/#/board/'+data[i].boardurl+'">'+
                              '<p class="board-description ng-binding">'+data[i].desc+'</p>'+
                               '<div class="likes-comments">'+
                                '<span >'+
                                  '<img class="small-community" src="/pictures/icons/small-owner.png" style="opacity:1">'+
                                  '<span id="nbrOfComments">'+data[i].likes+'</span>'+
                                '</span>'+
                                '<span>'+
                                  '<img src="/pictures/icons/small-comment-black.png" class="like-buttons" style=";margin-left:10px;cursor:default;">'+        
                                  '<span id="nbrOfComments" class="ng-binding">'+data[i].comments+' Scribbles</span>'+
                                '</span>'+
                              '</div>'+
                      '</a>'+
                      '<button class="btn btn-sm btn-detault pin-button">'+
                        '<img title="Pin Bord to ScrapBook" src="/pictures/icons/pin-black.png" style="height: 20px;cursor:pointer;">'+ 
                      '</button>'+
                      '</div>'+
                '</div>'+myhtml;
                $("#loading-html").remove()
                $("#container").append(myhtml);
                ignoreScrolling=false;
                $("textarea").on("change keyup paste", function(e){
                    if((e.keyCode == 13)&&($(this).val().trim() != ""))
                      submitComment($(this).attr("id").substr(12));
                })
          };
     });
}



$("#fileUpload").click(function(){    
    $("#predefinedbackgroud").attr("value","");
})


function displayMainMenue(){
  $("#main-menu-dropdown").fadeIn();
  $("#menu-icon").attr("ng-click","hideMainMenue()");
}

function hideMainMenue(){
  $("#main-menu-dropdown").fadeOut();
  $("#menu-icon").attr("ng-click","displayMainMenue()");
}

var trackUploadId = -1;
var isVelcroWallpaper =false;
var isAvatar =false;
var isProfilPic=false;
function setIsVelcroWallpaper()
{
  isVelcroWallpaper =false;
}

function setIsProfilPic() {
  isAvatar =true;
}

function appendPicture(id,src)
{
  console.log(src);
  $("#background-file-uploader input[type=file]").css("background-image","url('"+src+"')");
  $("#hiddenEditId").val(id)
}

function setPredefinedBackground(src){
  $("#prev-group img").attr("class","thumbnail small-background-preview")
  src.setAttribute("class","selected thumbnail small-background-preview")
  $("#predefinedbackgroud").attr("value",src.getAttribute("src"));
}

 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-63824291-1', 'auto');
    ga('send', 'pageview');

function playSong(songtrackId,youtubeId)
{
   var songTitle = $("#songTitle"+songtrackId)[0].innerHTML;
   $("#player-track-title")[0].innerHTML=songTitle;
   var trackIdInt=parseInt(songtrackId);
  $("#player-giraffe")[0].style.display="block";
   try{
     $("#nextTrack").attr("onClick","playSong("+(trackIdInt-1)+",'')");
     $("#previousTrack").attr("onClick","playSong("+(trackIdInt+1)+",'')");
     $("#previousTrack").attr("title",$("#songTitle"+(trackIdInt+1))[0].innerText);
     $("#nextTrack").attr("title",$("#songTitle"+(trackIdInt-1))[0].innerText);
   }catch(e){console.log("error"+e)}
   if(youtubeId.length == 0 || youtubeId == "null")
    {
      searchSoundCloudId(songTitle,songtrackId)
    }
   else
   {
      play_track(youtubeId);
   }
}

function updateYoutubeId(songtrackId,videoId)
{
  var url="/app_dev.php/soundtrack/updateYoutubeId";
  $.get(url,{
             songtrackId:songtrackId,
             videoId:videoId
         },function(data){   
                  $("#playSong"+songtrackId).attr("onClick","playSong("+songtrackId+",'"+videoId+"')"); 
               }); 
}

function searchSoundCloudId(str,songtrackId) {
  var url="http://api.soundcloud.com/tracks.json?client_id=229b5c9f7dca199464f6a3d38a9a16d1&q="+str+"&limit=5";
  $.get(url,{},function(data){ 
             if(soundObject)
             {
              soundObject.stop();
              soundObject.destruct();
              soundObject=null;
             }
             var songTitle = $("#songTitle"+songtrackId)[0].innerHTML;
             $("#player-giraffe")[0].style.display="block";
             $("#player-track-title")[0].innerHTML=songTitle;
             play_track(data[0].id);
/*             $("#player-giraffe")[0].style.bottom="initial";
             $("#player-giraffe")[0].style.right="30%";
             $("#player-giraffe")[0].style.display="block";
             $("#player-giraffe")[0].style.position="fixed";*/
                })
      }

function append_map(trackId)
{
  var mapCanvas = document.getElementById('map'+trackId);
  var mapOptions = {
  center: new google.maps.LatLng(44.5403, -78.5463),
                                            zoom: 8,
                                            mapTypeId: google.maps.MapTypeId.ROADMAP
            };
  var map = new google.maps.Map(mapCanvas, mapOptions);
  mapCanvas.style.display="block";
  initAutocomplete(trackId);
}



function initAutocomplete(trackId) {
  var map = new google.maps.Map(document.getElementById('map'+trackId), {
    center: {lat: -33.8688, lng: 151.2195},
    zoom: 13,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  var input = document.getElementById('pac-input');
  var searchBox = new google.maps.places.SearchBox(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.addListener('bounds_changed', function() {
    searchBox.setBounds(map.getBounds());
  });

  var markers = [];
  searchBox.addListener('places_changed', function() {
    var places = searchBox.getPlaces();
    if (places.length == 0) {
      return;
    }
    markers.forEach(function(marker) {
      marker.setMap(null);
    });
    markers = [];
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function(place) {
      var icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };
      markers.push(new google.maps.Marker({
        map: map,
        icon: icon,
        title: place.name,
        position: place.geometry.location
      }));

      if (place.geometry.viewport) {
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
      }
    });
    map.fitBounds(bounds);
  });
}


function msToTime(s) {
  function addZ(n) {
    return (n<10? '0':'') + n;
  }

  var ms = s % 1000;
  s = (s - ms) / 1000;
  var secs = s % 60;
  s = (s - secs) / 60;
  var mins = s % 60;
  var hrs = (s - mins) / 60;
  return addZ(mins) + ':' + addZ(secs);
}

try
{
  function loadSongTrack(trackId){
    SC.initialize({
      client_id: "229b5c9f7dca199464f6a3d38a9a16d1",
    });
    SC.get("/tracks/"+trackId, {limit: 1}, function(tracks){      
      $("#ending")[0].innerHTML=msToTime(tracks.duration);
    });
  }
}catch(e){
  console.log("error initialing sound cloud "+e);
};
var soundObject;
var a=new Object();
a.position=0;
function play_track(trackId) {
try{ 
    playing=true;
    if(soundObject)
      soundObject.resume();
    else{
      SC.initialize({
        client_id: "229b5c9f7dca199464f6a3d38a9a16d1",
      });

      SC.get("/tracks/"+trackId, {limit: 1}, function(tracks){
      
        $("#ending")[0].innerHTML=msToTime(tracks.duration);
      });

      SC.stream("/tracks/"+trackId, function(sound){
         soundObject=sound;
         setTimeout(delayedMouseLeave,10000);
         soundObject._whileplaying = function (b,c,d,e,f)
         {
          if(a.position)
            {
              $("#beginning")[0].innerHTML=msToTime(a.position);
            }
          if(a.position == soundObject.durationEstimate)
            stop_track();
          $("#progress-line-playing").css('width', ((a.position/soundObject.durationEstimate) * 100) + '%'); 
          var g=a._iO;if(isNaN(b)||null===b)return!1;a.position=b;a._processOnPosition();if(!a.isHTML5&&8<i){if(g.usePeakData&&"undefined"!==typeof c&&c)a.peakData={left:c.leftPeak,right:c.rightPeak};if(g.useWaveformData&&"undefined"!==typeof d&&d)a.waveformData={left:d.split(","),right:e.split(",")};if(g.useEQData&&"undefined"!==typeof f&&f&&f.leftEQ&&(b=f.leftEQ.split(","),a.eqData=b,a.eqData.left=b,"undefined"!==typeof f.rightEQ&&f.rightEQ))a.eqData.right=f.rightEQ.split(",")}1===a.playState&&(!a.isHTML5&&8===i&&!a.position&&a.isBuffering&&a._onbufferchange(0),g.whileplaying&&g.whileplaying.apply(a));
         return!0
       };
         soundObject.play();
       });
      };
    $("#playerPlayButton").attr("src","/pictures/icons/big-pause.png");
    $("#playerPlayButton").attr("onClick","pause_track("+trackId+")");
    $("#Soundtagged").attr("src","/pictures/icons/pause.png");
    $("#Soundtagged").attr("onClick","pause_track("+trackId+")");
    }catch(e){console.log(e);}
}
function pause_track(trackId) {
    playing=false;
    soundObject.pause();
    $("#playerPlayButton").attr("src","/pictures/icons/big-play.png");
    $("#playerPlayButton").attr("onClick","play_track("+trackId+")");
    $("#Soundtagged").attr("src","/pictures/icons/play-button.png");
    $("#Soundtagged").attr("onClick","play_track("+trackId+")");   
}


function stop_track() {
    playing=false;
    soundObject.stop();
    $("#progress-line-playing").css('width', '0%');
    $("#playerPlayButton").attr("src","/pictures/icons/big-play.png");
    $("#playerPlayButton").attr("onClick","play_track("+trackId+")");
    $("#Soundtagged").attr("src","/pictures/icons/play-button.png");
    $("#Soundtagged").attr("onClick","play_track("+trackId+")");   
}

function hidePlayerContainer()
{
  $("#player-container").fadeOut();
}

function displayPlayerContainer()
{
  $("#player-container").fadeIn();
}

var hideplayerContainerTimeout;
function delayedMouseLeave()
{
  if(!$("#player-container").is(":hover"))
    hidePlayerContainer();

  clearTimeout(hideplayerContainerTimeout);
};


</script>
<span id="player-giraffe" style="position: fixed;bottom: initial;top: 10px;display:none;">
      <img src="{{asset('/pictures/icons/soundcloud.png')}}" style="  position: absolute;bottom: 10px;height: 52px;left: 396px;">
      <span id="player-controll-buttons">
        <img  id="previousTrack" src="{{asset('/pictures/icons/backward-white.png')}}" style="padding: 5px;border: 2px solid white;border-radius: 50%;margin-left: -12px;height: 25px;display:inline-block;margin-left: 10px;margin-right: 5px" >
        <img id="playerPlayButton" src="{{asset('/pictures/icons/play-button.png')}}" style="padding: 5px;border: 2px solid white;border-radius: 50%;height: 45px;display:inline-block" >
        <img  id="nextTrack" src="{{asset('/pictures/icons/forward-white.png')}}" style="padding: 5px;border: 2px solid white;border-radius: 50%;margin-left: -12px;height: 25px;display:inline-block;margin-right: 5px;margin-left: 5px;" >
      </span>
      <span id="player-track-title" ></span>
      <span id="progress-controls" >
        <span id="beginning">00:00</span>
        <span id="progress-bar-player-container" style="
        border: 1px solid white;
        width: 210px;
        padding-left: 88px;
        margin-left: 10px;
        height: 10px;
        margin-right: 10px;
        position:relative;
        margin-top: 5px;
    ">
        <span id="progress-line-playing" ></span>   

        </span>
        <span id="ending"></span>
      </span>
    </span>
<script type="text/javascript" src="{{ asset('js/soundcloud.sdk.js')}}" ></script>
</body>
<script type="text/javascript" src="{{ asset('js/jquery-ui.min.js')}} "></script>
<script type="text/javascript" src="{{ asset('js/underscore-min.js')}} "></script>
<script type="text/javascript" src="{{ asset('js/jquery.fileupload.js')}} "></script>
<script type="text/javascript" src="{{ asset('js/jquery.iframe-transport.js')}} "></script>
<script type="text/javascript" src="{{ asset('js/FileUploader.js')}} "></script>
<script type="text/javascript" src="{{ asset('js/jquery.autocomplete.js')}}"></script>
</html><!-- all righs reserved {%if 'souller' in url('render_home_page') %}souller{% else %}scribbler party{%  endif %}
